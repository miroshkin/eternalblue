// <auto-generated />
using System;
using EternalBlue.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EternalBlue.Migrations
{
    [DbContext(typeof(IFSContext))]
    partial class IFSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EternalBlue.Models.ProcessedCandidate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProcessedCandidates");
                });

            modelBuilder.Entity("EternalBlue.Models.ProcessedCandidateSkill", b =>
                {
                    b.Property<Guid>("ProcessedCandidateSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProcessedCandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProcessedCandidateSkillId");

                    b.HasIndex("ProcessedCandidateId");

                    b.HasIndex("SkillId");

                    b.ToTable("ProcessedCandidateSkills");
                });

            modelBuilder.Entity("EternalBlue.Models.Skill", b =>
                {
                    b.Property<Guid>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TechnologyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TechnologyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("SkillId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("EternalBlue.Models.ProcessedCandidateSkill", b =>
                {
                    b.HasOne("EternalBlue.Models.ProcessedCandidate", "ProcessedCandidate")
                        .WithMany("ProcessedCandidateSkills")
                        .HasForeignKey("ProcessedCandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EternalBlue.Models.Skill", "Skill")
                        .WithMany("ProcessedCandidateSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessedCandidate");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("EternalBlue.Models.ProcessedCandidate", b =>
                {
                    b.Navigation("ProcessedCandidateSkills");
                });

            modelBuilder.Entity("EternalBlue.Models.Skill", b =>
                {
                    b.Navigation("ProcessedCandidateSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
